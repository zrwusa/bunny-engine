{
	"info": {
		"_postman_id": "2dba29dd-28c8-46e8-8943-cfb2279947eb",
		"name": "bunny-engine",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "13742496"
	},
	"item": [
		{
			"name": "Check",
			"item": [
				{
					"name": "Ping",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept-Language",
								"value": "en",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{endpoint}}/api/v1/ping",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"v1",
								"ping"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Prepare",
			"item": [
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"userId\", jsonData.resData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email}}\",\n    \"password\": \"{{password}}\",\n    \"passwordConfirmation\": \"{{password}}\",\n    \"name\": \"{{name}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/v1/users",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const accessToken = responseHeaders['x-access-token'];",
									"const refreshToken = responseHeaders['x-refresh-token'];",
									"postman.setEnvironmentVariable(\"accessToken\", accessToken);",
									"postman.setEnvironmentVariable(\"refreshToken\", refreshToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept-Language",
								"value": "en",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email}}\",\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/v1/sessions",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"v1",
								"sessions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Sessions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{endpoint}}/api/v1/sessions",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"v1",
								"sessions"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CheckConfig",
			"item": [
				{
					"name": "GetConfig",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept-Language",
								"value": "en",
								"type": "text"
							},
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{endpoint}}/api/v1/config",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"v1",
								"config"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Address",
			"item": [
				{
					"name": "Create Address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"lineA\": \"Line a dev\",\n    \"lineB\": \"Line b dev\",\n    \"lineC\": \"Line c dev\",\n    \"category\": \"HOME\",\n    \"postCode\": 112312\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/v1/users/{{userId}}/addresses",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{userId}}",
								"addresses"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Product",
			"item": [
				{
					"name": "Create Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"productId\", jsonData.resData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Canon EOS 1500D DSLR Camera with 18-55mm Lens\",\n    \"description\": \"Designed for first-time DSLR owners who want impressive results straight out of the box, capture those magic moments no matter your level with the EOS 1500D. With easy to use automatic shooting modes, large 24.1 MP sensor, Canon Camera Connect app integration and built-in feature guide, EOS 1500D is always ready to go.\",\n    \"price\": 879.99,\n    \"image\": \"https://i.imgur.com/QlRphfQ.jpg\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/v1/products",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "zh",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/v1/products/{{productId}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"{{productId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Canon EOS 1500D DSLR Camera with 18-55mm Lens\",\n    \"description\": \"Designed for first-time DSLR owners who want impressive results straight out of the box, capture those magic moments no matter your level with the EOS 1500D. With easy to use automatic shooting modes, large 24.1 MP sensor, Canon Camera Connect app integration and built-in feature guide, EOS 1500D is always ready to go.\",\n    \"price\": 6068.98,\n    \"image\": \"https://i.imgur.com/QlRphfQ.jpg\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/v1/products/{{productId}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"{{productId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "zh",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/v1/products?skip=0&take=10",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							],
							"query": [
								{
									"key": "skip",
									"value": "0"
								},
								{
									"key": "take",
									"value": "10"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Metrics",
			"item": [
				{
					"name": "Get metrics",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{metricsEndpoint}}/metrics",
							"host": [
								"{{metricsEndpoint}}"
							],
							"path": [
								"metrics"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Order",
			"item": [
				{
					"name": "Create Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"orderId\", jsonData.resData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"price\": 56936.52,\n    \"address\": \"test address\",\n    \"amount\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/v1/orders",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"v1",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/v1/orders",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"v1",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Order Products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\"{{productId}}\"]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/v1/orders/{{orderId}}/products",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								"{{orderId}}",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Orders Products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/v1/orders/products?minPrice=900&maxPrice=60000",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								"products"
							],
							"query": [
								{
									"key": "minPrice",
									"value": "900"
								},
								{
									"key": "maxPrice",
									"value": "60000"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Post",
			"item": [
				{
					"name": "Create Post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"postId\", jsonData.resData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"What is Node.js: A Comprehensive Guide\",\n    \"content\": \"Why Do We Use NodeJs?There are many reasons for which we prefer using NodeJs for the server side of our application, some of them are discussed in the following:NodeJs is built on Google Chrome’s V8 engine, and for this reason its execution time is very fast and it runs very quickly.There are more than 50,000 bundles available in the Node Package Manager and for that reason developers can import any of the packages any time according to their needed functionality for which a lot of time is saved.As NodeJs do not need to wait for an API to return data , so for building real time and data intensive web applications, it is very useful. It is totally asynchronous in nature that means it is totally non-blocking.The loading time for an audio or video is reduced by NodeJs because there is better synchronization of the code between the client and server for having the same code base.As NodeJs is open-source and it is nothing but a JavaScript framework , so for the developers who are already used to JavaScript, for them starting developing their projects with NodeJs is very easy.\",\n    \"price\": 102.68,\n    \"image\": \"https://nodejs.org/static/images/logo.svg\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/v1/posts",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"v1",
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{endpoint}}/api/v1/posts/{{postId}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"v1",
								"posts",
								"{{postId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Posts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{endpoint}}/api/v1/posts?skip=1&take=10",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"v1",
								"posts"
							],
							"query": [
								{
									"key": "skip",
									"value": "1"
								},
								{
									"key": "take",
									"value": "10"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Clean",
			"item": [
				{
					"name": "Delete Post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/v1/posts/{{postId}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"v1",
								"posts",
								"{{postId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/v1/products/{{productId}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"{{productId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "zh",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/v1/orders/{{orderId}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"v1",
								"orders",
								"{{orderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete DemoThunk",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "zh",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/v1/demo-thunks/{{demoThunkId}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"v1",
								"demo-thunks",
								"{{demoThunkId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const deletedAccessToken = responseHeaders['x-access-token'];",
									"const deletedRefreshToken = responseHeaders['x-refresh-token'];",
									"",
									"postman.setEnvironmentVariable(\"accessToken\", deletedAccessToken);",
									"postman.setEnvironmentVariable(\"refreshToken\", deletedRefreshToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{endpoint}}/api/v1/sessions",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"v1",
								"sessions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/v1/users/{{userId}}",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User By Body",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-refresh",
								"value": "{{refreshToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email}}\",\n    \"name\": \"{{name}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{endpoint}}/api/v1/users",
							"host": [
								"{{endpoint}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{accessToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const newAccessToken = responseHeaders['x-access-token'];",
					"",
					"console.log(`new access token ${newAccessToken}`);",
					"",
					"if(newAccessToken){",
					"    console.info('Set new access token');",
					"    postman.setEnvironmentVariable(\"accessToken\", newAccessToken);",
					"}",
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "email",
			"value": "test@example.com"
		},
		{
			"key": "password",
			"value": "Password_123"
		},
		{
			"key": "name",
			"value": "Pablo Rios"
		},
		{
			"key": "accessToken",
			"value": "<accessToken will be set when you create a session>"
		},
		{
			"key": "refreshToken",
			"value": "<refreshToken will be set when you create a session>"
		},
		{
			"key": "endpoint",
			"value": "http://localhost:8080"
		},
		{
			"key": "productId",
			"value": "<productId will be set when you create a session>"
		},
		{
			"key": "metricsEndpoint",
			"value": "http://localhost:9090"
		}
	]
}