version: '3.7'
services:
  nginx-dev:
    image: nginx:stable-alpine
    container_name: nginx-dev
    ports:
      - "8080:8080"
      - "9090:9090"
      - "7070:7070"
    volumes:
      - ./nginx/default.dev.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - bunny-back-end-tpl-dev

  bunny-back-end-tpl-dev:
    image: bunny-back-end-tpl-dev
    build:
      context: ./
      args:
        PKG_INSTALL_ENV: development
    volumes:
      - ./:/bunny-back-end-tpl
      - /bunny-back-end-tpl/node_modules
    environment:
      - NODE_ENV=development
      - PORT=8080
      - MONGO_DB_URI=mongodb://root_dev:root_dev_password@mongo-dev:27017/bunny_back_end_tpl_dev?authSource=admin
      - SALT_WORK_FACTOR=10
      - ACCESS_TOKEN_TTL=0.1m
      - REFRESH_TOKEN_TTL=60m
      - METRICS_PORT=9090
      - REDIS_URI=redis://@redis-dev:6379
      - POSTGRES_URI=postgresql://postgres:root_dev_password@postgres-dev:5432/bunny_back_end_tpl_dev
      - APOLLO_PORT=7070
      - CORS_ORIGINS=http://localhost:3000,http://localhost:3001
      - OPEN_API_URL=http://example.com
    entrypoint: sh -c "yarn dev:compose"
    expose:
      - "8080"
      - "9090"
      - "7070"
    depends_on:
      - postgres-dev
      - mongo-dev
      - redis-dev

  postgres-dev:
    image: postgres
    container_name: postgres-dev
    environment:
      - POSTGRES_PASSWORD=root_dev_password
      - POSTGRES_DB=bunny_back_end_tpl_dev
    volumes:
      - postgres-dev:/var/lib/postgresql/data

  mongo-dev:
    image: mongo
    container_name: mongo-dev
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root_dev
      - MONGO_INITDB_ROOT_PASSWORD=root_dev_password
    volumes:
      - mongo-dev:/data/db

  redis-dev:
    image: redis
    container_name: redis-dev
    volumes:
      - redis-dev:/data


volumes:
  postgres-dev:
  mongo-dev:
  redis-dev:
